trigger:
- '*'

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build application'
  jobs:
    - job: 'Build'
      displayName: 'Build Job'
      pool:
        vmImage: 'ubuntu-16.04'
        demands:
          - npm

      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '3.1.100'
      
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
        inputs:
          version: '$(dotnetSdkVersion)'
      
      - task: Npm@1
        displayName: 'Run npm install'
        inputs:
          verbose: false
      
      - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
        displayName: 'Compile Sass assets'
      
      - task: gulp@1
        displayName: 'Run gulp tasks'
      
      - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        displayName: 'Write build info'
        workingDirectory: $(wwwrootDir)
      
      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: 'Build the project - $(buildConfiguration)'
        inputs:
          command: 'build'
          arguments: '--no-restore --configuration $(buildConfiguration)'
          projects: '**/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
          zipAfterPublish: true
      
      - publish: '$(Build.ArtifactStagingDirectory)'
        artifact: drop      
- stage: 'Deploy'
  displayName: 'Deploy web application to azure'
  dependsOn: 'Build'
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              displayName: 'Download the artifact to build agent'
              inputs:
                buildType: current
                artifactName: drop
            - task: AzureWebApp@1
              displayName: 'Deploy to Azure'
              inputs:
                appName: '$(AppServiceName)'
                azureSubscription: 'Azure Subscription (ashar.khan@ashark.net)'
                package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
                appType: webApp
                